apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "antlr"

repositories {
    jcenter()
}
buildscript {
    ext.kotlin_version = "1.3.31"
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
    }
}
compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"
    }
}
test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    systemProperties 'logback.configurationFile' : new File(projectDir,'src/test/resources/logback-test.xml').absolutePath
    enableAssertions = true
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1"
    
    implementation "com.github.javaparser:javaparser-symbol-solver-core:3.14.0"
    antlr "org.antlr:antlr4:4.7.2"

    implementation "org.slf4j:slf4j-api:1.7.26"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "io.github.microutils:kotlin-logging:1.6.26"

    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
}
generateGrammarSource {
    outputDirectory = file("src/main/java/edu/illinois/cs/cs125/janini/antlr")
    arguments += ["-visitor", "-package", "edu.illinois.cs.cs125.janini.antlr", "-Xexact-output-dir"]
}
compileKotlin.dependsOn generateGrammarSource
dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
