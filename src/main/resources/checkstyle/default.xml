<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<!--
  Configuration customized for CS125.
  * Semi-permanent customizations marked with CS125.
  * Per-project customizations (if any) marked with Quiz-Starter.
 -->

<module name="Checker">
  <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

  <property name="fileExtensions" value="java, properties, xml"/>

  <!-- Checks that a package-info.java file exists for each package.     -->
  <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->

  <!-- CS125: We don't create a package. -->
  <!-- <module name="JavadocPackage"/> -->

  <!-- Checks whether files end with a new line.                        -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <!-- Quiz-Starter: We can disable this for our environment
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf_cr_crlf"/>
  </module>
  -->

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation"/>

  <!-- Checks for Size Violations.                    -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <module name="FileLength"/>

  <!-- Checks for whitespace                               -->
  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
  <module name="FileTabCharacter"/>

  <!-- Miscellaneous other checks.                   -->
  <!-- See http://checkstyle.sf.net/config_misc.html -->

  <!-- Quiz-Starter: we're going to be lenient about this.
  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="minimum" value="0"/>
    <property name="maximum" value="0"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>
  -->

  <module name="TreeWalker">

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <!-- Quiz-Starter: we don't need to require Javadoc
         comments on most quiz questions.
    <module name="JavadocMethod"/>
    <module name="JavadocType"/>
    <module name="JavadocVariable"/>
    <module name="JavadocStyle"/>
    -->

    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
    <module name="RedundantImport"/>
    <module name="UnusedImports">
      <property name="processJavadoc" value="false"/>
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <!-- CS125: 80 characters is too few on modern monitors. Google uses 100, so so do we. -->
    <module name="LineLength">
      <property name="max" value="100"/>
    </module>
    <module name="MethodLength"/>
    <module name="ParameterNumber"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad"/>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround"/>

    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <!-- Janini: we need nested blocks for inline functions
    <module name="AvoidNestedBlocks"/>
    -->
    <module name="EmptyBlock"/>
    <module name="LeftCurly"/>
    <!-- Quiz-Starter: allow empty for loops for list problems. -->
    <module name="NeedBraces">
      <property name="allowEmptyLoopBody" value="true"/>
    </module>
    <module name="RightCurly"/>

    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="AvoidInlineConditionals"/>
    <!-- Quiz-Starter: allow empty statements for loop list walking.
    <module name="EmptyStatement"/>
    -->
    <module name="EqualsHashCode"/>
    <module name="HiddenField"/>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment"/>

    <!-- Quiz-Starter: We can disable this for our environment
    <module name="MagicNumber"/>
    -->
    <module name="MissingSwitchDefault"/>
    <!-- CS125: I don't like these defaults. if (test == true) is clear. -->
    <!-- <module name="SimplifyBooleanExpression"/> -->
    <!-- <module name="SimplifyBooleanReturn"/> -->

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <!-- Quiz-Starter: No need for this warning.
    <module name="DesignForExtension"/>
    -->
    <module name="FinalClass"/>
    <!-- CS125: Our utility classes must have public main methods. -->
    <!-- <module name="HideUtilityClassConstructor"/> -->
    <module name="InterfaceIsType"/>
    <!-- Quiz-Starter: we don't need to require non-public fields
    <module name="VisibilityModifier"/>
    -->

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <!-- Quiz-Starter: Disabling by default.
    <module name="FinalParameters"/>
    -->
    <module name="TodoComment"/>
    <module name="UpperEll"/>

    <module name="Indentation"/>

  </module>

</module>
